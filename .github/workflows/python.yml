name: tests

on:
  push:
  pull_request:
    branches:
      - $default-branch

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - run: pip install -r requirements_ci.txt
      - run: git clone https://github.com/PyCQA/pycodestyle ../pycodestyle
      - run: cd ../pycodestyle && python setup.py build && cd -
      - run: git clone https://github.com/mbdevpl/argunparse ../argunparse
      - run: cd ../argunparse && pip install -r requirements_test.txt && python setup.py build && cd -
      - run: git clone https://github.com/python-semver/python-semver ../semver
      - run: cd ../semver && python -m build && cd -
      - run: python -m coverage run --branch --source . -m unittest -v
      - run: python -m coverage run --append --branch --source . -m unittest -v test.test_version
        env:
          LOGGING_LEVEL: critical
      - run: python -m coverage report --show-missing
      - run: codecov
  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: x64
      - run: pip install -r requirements_test.txt
      - run: python setup.py bdist_wheel sdist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
